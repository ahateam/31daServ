任务：

TODO：

Repository开放原生接口，返回rs


用户授权，验证码，短信邮件发送等服务，将来需要独立出来部署

Repository层增加如下模版方法：
1，指定返回某些字段的get或getlist方法
2，制定跳过某些字段不返回的get或getlist方法
	例如获取用户对象，但别返回密码
	或者只取整个对象的某几个字段


支付宝对接流程文案

GET和POST方法的verify暂时都没做



模块化需求：
session管理
*session要重构，吊哥做breeze的时候整了很多user的扩展信息进去
*用java本地缓存，优化session模块，避免auth时的token反复查询。持有时间可以短。消耗内存可以少。
*也可以做一个server端的共享token，多个用户公用一个token，做快速验证，如果token失效，则进一步进行用户验证，用户验证通过则返回新的快速验证token

验证管理（邮件，短信）
*需解决60秒重复发送等问题。从客户端和服务端做好防刷设计


部署
	性能测试方案
	数据备份和迁移方案
	数据服务动态扩展方案
	各种监控
	gradle打包脚本重构和规范


框架待完善需求：

	制定js和java之间的数据类型映射关系，制作文档
	
	所有data层的配置化，单元测试，用例和文档
	
	druid连接池使用
	配置文件（相关文档整理）
	配置优化，监控方法，测试和分析（相关文档整理）

config文件夹及各种配置文件管理办法
	logback配置规范化（分文件，自动删除等）
	跨域问题的配置化
	配置文件管理规划
	
 
server

	auth，拦截器，扩展能力
	
	基于二进制的通讯协议的rpc实现(protostuff)
	
	内部通讯或消息队列实现
	
	https支持
	
	长连接协议规范化（心跳）
	
	性能和可靠性测试
	
	监控，测试和分析
	
	具体alive，status以及list方法的设计和实现
	
	服务管理器的设计和实现

	制定使用和操作流程规范
	
	jvm查看工具
	http://boendev.iteye.com/blog/882479
	
	
	
	

	
	





